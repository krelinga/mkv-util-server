syntax = "proto3";

option go_package = "github.com/krelinga/mkv-util-server/pb";

import "google/protobuf/duration.proto";

message GetFileSizeRequest {
    string path = 1;
}

message GetFileSizeReply {
    int64 size = 1;
}

message RunMkvToolNixCommandRequest {
    enum Command {
        COMMAND_UNKNOWN = 0;
        COMMAND_MKVINFO = 1;
    }
    Command command = 1;
    repeated string args = 2;
}

message RunMkvToolNixCommandReply {
    int32 exit_code = 1;
    string stdout = 2;
    string stderr = 3;
}

message ConcatRequest {
    repeated string input_paths = 1;
    string output_path = 2;
}

message ConcatReply {
}

message GetChaptersRequest {
    string in_path = 1;
    ChaptersFormat format = 2;
}

message GetChaptersReply {
    Chapters chapters = 1;
}

enum ChaptersFormat {
    CF_UNKNOWN = 0;
    CF_SIMPLE = 1;
    CF_XML = 2;
}

message Chapters {
    ChaptersFormat format = 1;
    SimpleChapters simple = 2;
}

message SimpleChapters {
    message Chapter {
        int32 number = 1;
        string name = 2;
        google.protobuf.Duration offset = 3;
    }
    repeated Chapter chapters = 1;
}

message GetInfoRequest {
}

message GetInfoReply {
}

service MkvUtil {
    rpc GetFileSize(GetFileSizeRequest) returns (GetFileSizeReply) {}
    rpc RunMkvToolNixCommand(RunMkvToolNixCommandRequest) returns (RunMkvToolNixCommandReply) {}
    rpc Concat(ConcatRequest) returns (ConcatReply) {}
    rpc GetChapters(GetChaptersRequest) returns (GetChaptersReply) {}
    rpc GetInfo(GetInfoRequest) returns (GetInfoReply) {}
}
